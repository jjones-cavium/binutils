2014-02-20  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* aarch64-asm-2.c (aarch64_insert_operand): Add case entries
	for newly defined operands.
	* aarch64-dis-2.c (aarch64_extract_operand): Likewise.
	* aarch64-opc-2.c (aarch64_operands): Add new fields for 
	newly defined operands.
	* aarch64-opc.c (aarch64_field): Add the field entries for
	new fields Rt0, Rt1, Rs0 and Rs1.
	(aarch64_print_operand): Handle print of newly defined 
	operands.
	* aarch64-opc.h (aarch64_field_kind): New fields FLD_Rt0,
	FLD_Rt1, FLD_Rs0 and FLD_Rs1.
	* aarch64-tbl.h (QL_CAS): Modify to handle 5 operands instead
	of 3 as per new assembler manual.
	(aarch64_opcode_table): Modify the semantics of casp instruction
	as per new assembler manual.
	(aarch64_opcode_table): Handle new fields FLD_Rt0, FLD_Rt1,
	FLD_Rs0 and FLD_Rs1.

2013-11-20  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-opc.c (aarch64_pstatefields): Update.

2013-11-05  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-opc.c (F_DEPRECATED): New macro.
	(aarch64_sys_regs): Update; flag "spsr_svc" and "spsr_hyp" with
	F_DEPRECATED.
	(aarch64_print_operand): Call aarch64_sys_reg_deprecated_p on
	AARCH64_OPND_SYSREG.

2013-11-05  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-dis.c (convert_ubfm_to_lsl): Check for cond != '111x'.
	(convert_from_csel): Likewise.
	* aarch64-opc.c (operand_general_constraint_met_p): Handle
	AARCH64_OPND_CLASS_COND and AARCH64_OPND_COND1.
	(aarch64_print_operand): Handle AARCH64_OPND_COND1.
	* aarch64-tbl.h (aarch64_opcode_table): Use COND1 instead of
	COND for cinc, cset, cinv, csetm and cneg.
	(AARCH64_OPERANDS): Add entry for AARCH64_OPND_COND1.
	* aarch64-asm-2.c: Re-generated.
	* aarch64-dis-2.c: Ditto.
	* aarch64-opc-2.c: Ditto.

2013-11-05  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-opc.c (set_syntax_error): New function.
	(operand_general_constraint_met_p): Replace set_other_error
	with set_syntax_error.

2013-08-28  Nick Clifton  <nickc@redhat.com>

	* aarch64-opc.c (aarch64_logical_immediate_p): Return FALSE if the
	immediate is not suitable for the 32-bit ABI.

2013-07-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* aarch64-dis-2.c (aarch64_opcode_lookup_1): Match the opcodes
	for atomic instructions.
	* aarch64-tbl.h (QL_CAS): New qualifier.
	(aarch64_feature_atomic): Add new entry for atomic feature.
	(ATOMIC): Define and map to aarch64_feature_atomic feature.
	(aarch64_opcode_table): Add entries for casb, cash, cas, cas,
	casp, ldaddb, ldaddh, ldadd, ldadd, ldclrb, ldclrh, ldclr,
	ldclr, ldeorb, ldeorh, ldeor, ldeor, ldsetb, ldseth, ldset,
	ldset, ldsmaxb, ldsmaxh, ldsmax, ldsmax, ldsminb, ldsminh,
	ldsmin, ldsmin, ldumaxb, ldumaxh, ldumax, ldumax, lduminb,
	lduminh, ldumin, ldumin, swpb, swph, swp and swp.

2013-05-13  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-asm.c (aarch64_ins_advsimd_imm_modified): Remove assertion.
	* aarch64-opc.c (operand_general_constraint_met_p): Relax the range
	check from [0, 255] to [-128, 255].

2013-05-07  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* aarch64-opc.c (aarch64_sys_regs): Add support for GIC ICC_*
	system registers in gas.

2013-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64.h (AARCH64_FEATURE_CRC): New macro.

2013-01-17  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-asm.c (aarch64_ins_advsimd_imm_modified): Handle 8-bit MOVI.
	* aarch64-dis.c (aarch64_ext_advsimd_imm_modified): Likewise.
	* aarch64-opc.c (operand_general_constraint_met_p): For
	AARCH64_MOD_LSL, move the range check on the shift amount before the 
	alignment check; change to call set_sft_amount_out_of_range_error
	instead of set_imm_out_of_range_error.
	* aarch64-tbl.h (QL_SIMD_IMM_B): Replace NIL with LSL.
	(aarch64_opcode_table): Remove the OP enumerator from the asimdimm
	8-bit MOVI entry; change the 2nd operand from SIMD_IMM to
	SIMD_IMM_SFT.
