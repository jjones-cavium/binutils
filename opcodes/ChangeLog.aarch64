2013-07-25  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* aarch64-dis-2.c (aarch64_opcode_lookup_1): Match the opcodes
	for atomic instructions.
	* aarch64-tbl.h (QL_CAS): New qualifier.
	(aarch64_feature_atomic): Add new entry for atomic feature.
	(ATOMIC): Define and map to aarch64_feature_atomic feature.
	(aarch64_opcode_table): Add entries for casb, cash, cas, cas,
	casp, ldaddb, ldaddh, ldadd, ldadd, ldclrb, ldclrh, ldclr,
	ldclr, ldeorb, ldeorh, ldeor, ldeor, ldsetb, ldseth, ldset,
	ldset, ldsmaxb, ldsmaxh, ldsmax, ldsmax, ldsminb, ldsminh,
	ldsmin, ldsmin, ldumaxb, ldumaxh, ldumax, ldumax, lduminb,
	lduminh, ldumin, ldumin, swpb, swph, swp and swp.

2013-05-13  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-asm.c (aarch64_ins_advsimd_imm_modified): Remove assertion.
	* aarch64-opc.c (operand_general_constraint_met_p): Relax the range
	check from [0, 255] to [-128, 255].

2013-05-07  Naveen H.S  <Naveen.Hurugalawadi@caviumnetworks.com>

	* aarch64-opc.c (aarch64_sys_regs): Add support for GIC ICC_*
	system registers in gas.

2013-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64.h (AARCH64_FEATURE_CRC): New macro.

2013-01-17  Yufeng Zhang  <yufeng.zhang@arm.com>

	* aarch64-asm.c (aarch64_ins_advsimd_imm_modified): Handle 8-bit MOVI.
	* aarch64-dis.c (aarch64_ext_advsimd_imm_modified): Likewise.
	* aarch64-opc.c (operand_general_constraint_met_p): For
	AARCH64_MOD_LSL, move the range check on the shift amount before the 
	alignment check; change to call set_sft_amount_out_of_range_error
	instead of set_imm_out_of_range_error.
	* aarch64-tbl.h (QL_SIMD_IMM_B): Replace NIL with LSL.
	(aarch64_opcode_table): Remove the OP enumerator from the asimdimm
	8-bit MOVI entry; change the 2nd operand from SIMD_IMM to
	SIMD_IMM_SFT.
